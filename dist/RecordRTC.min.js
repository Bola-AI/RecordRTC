!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("RecordRTC",[],t):"object"==typeof exports?exports.RecordRTC=t():e.RecordRTC=t()}(window,(function(){return function(e){var t={};function o(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,o),i.l=!0,i.exports}return o.m=e,o.c=t,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)o.d(n,i,function(t){return e[t]}.bind(null,i));return n},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=0)}([function(e,t,o){"use strict";(function(o,n){var i;
/**
 * {@link https://github.com/muaz-khan/RecordRTC|RecordRTC} is a WebRTC JavaScript library for audio/video as well as screen activity recording. It supports Chrome, Firefox, Opera, Android, and Microsoft Edge. Platforms: Linux, Mac and Windows. 
 * @summary Record audio, video or screen inside the browser.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef RecordRTC
 * @class
 * @example
 * var recorder = RecordRTC(mediaStream or [arrayOfMediaStream], {
 *     type: 'video', // audio or video or canvas
 *     recorderType: MediaStreamRecorder || CanvasRecorder || StereoAudioRecorder || Etc
 * });
 * recorder.startRecording();
 * @see For further information:
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - Single media-stream object, array of media-streams, html-canvas-element, etc.
 * @param {object} config - {type:"video", recorderType: MediaStreamRecorder, disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, desiredSampRate: 16000, video: HTMLVideoElement, etc.}
 */
function r(e,t){if(!e)throw"First parameter is required.";t=new a(e,t=t||{type:"video"});var o=this;function n(o){o&&(t.initCallback=function(){o(),o=t.initCallback=null});var n=new s(e,t);(f=new n(e,t)).record(),l("recording"),t.disableLogs||console.log("Initialized recorderType:",f.constructor.name,"for output-type:",t.type)}function i(e){if(e=e||function(){},f){if("paused"===o.state)return o.resumeRecording(),void setTimeout((function(){i(e)}),1);"recording"===o.state||t.disableLogs||console.warn('Recording state should be: "recording", however current state is: ',o.state),t.disableLogs||console.log("Stopped recording "+t.type+" stream."),f.stop((function(n){if(!f)return void("function"==typeof e.call?e.call(o,""):e(""));Object.keys(f).forEach((function(e){"function"!=typeof f[e]&&(o[e]=f[e])}));var i=f.blob;if(!i){if(!n)throw"Recording failed.";f.blob=i=n}i&&!t.disableLogs&&console.log(i.type,"->",y(i.size));if(e){var r;try{r=m.createObjectURL(i)}catch(e){}"function"==typeof e.call?e.call(o,r):e(r)}if(!t.autoWriteToDisk)return;c((function(e){var o={};o[t.type+"Blob"]=e,D.Store(o)}))})),l("stopped")}else g()}function d(e){postMessage((new FileReaderSync).readAsDataURL(e))}function c(e,o){if(!e)throw"Pass a callback function over getDataURL.";var n=o?o.blob:(f||{}).blob;if(!n)return t.disableLogs||console.warn("Blob encoder did not finish its job yet."),void setTimeout((function(){c(e,o)}),1e3);if("undefined"==typeof Worker||navigator.mozGetUserMedia){var i=new FileReader;i.readAsDataURL(n),i.onload=function(t){e(t.target.result)}}else{var r=function(e){try{var t=m.createObjectURL(new Blob([e.toString(),"this.onmessage =  function (eee) {"+e.name+"(eee.data);}"],{type:"application/javascript"})),o=new Worker(t);return m.revokeObjectURL(t),o}catch(e){}}(d);r.onmessage=function(t){e(t.data)},r.postMessage(n)}}function u(e){e=e||0,"paused"!==o.state?"stopped"!==o.state&&(e>=o.recordingDuration?i(o.onRecordingStopped):(e+=1e3,setTimeout((function(){u(e)}),1e3))):setTimeout((function(){u(e)}),1e3)}function l(e){o&&(o.state=e,"function"==typeof o.onStateChanged.call?o.onStateChanged.call(o,e):o.onStateChanged(e))}var f,h='It seems that recorder is destroyed or "startRecording" is not invoked for '+t.type+" recorder.";function g(){!0!==t.disableLogs&&console.warn(h)}var p={startRecording:function(i){return t.disableLogs||console.log("RecordRTC version: ",o.version),i&&(t=new a(e,i)),t.disableLogs||console.log("started recording "+t.type+" stream."),f?(f.clearRecordedData(),f.record(),l("recording"),o.recordingDuration&&u(),o):(n((function(){o.recordingDuration&&u()})),o)},stopRecording:i,pauseRecording:function(){f?"recording"===o.state?(l("paused"),f.pause(),t.disableLogs||console.log("Paused recording.")):t.disableLogs||console.warn("Unable to pause the recording. Recording state: ",o.state):g()},resumeRecording:function(){f?"paused"===o.state?(l("recording"),f.resume(),t.disableLogs||console.log("Resumed recording.")):t.disableLogs||console.warn("Unable to resume the recording. Recording state: ",o.state):g()},initRecorder:n,setRecordingDuration:function(e,t){if(void 0===e)throw"recordingDuration is required.";if("number"!=typeof e)throw"recordingDuration must be a number.";return o.recordingDuration=e,o.onRecordingStopped=t||function(){},{onRecordingStopped:function(e){o.onRecordingStopped=e}}},clearRecordedData:function(){f?(f.clearRecordedData(),t.disableLogs||console.log("Cleared old recorded data.")):g()},getBlob:function(){if(f)return f.blob;g()},getDataURL:c,toURL:function(){if(f)return m.createObjectURL(f.blob);g()},getInternalRecorder:function(){return f},save:function(e){f?S(f.blob,e):g()},getFromDisk:function(e){f?r.getFromDisk(t.type,e):g()},setAdvertisementArray:function(e){t.advertisement=[];for(var o=e.length,n=0;n<o;n++)t.advertisement.push({duration:n,image:e[n]})},blob:null,bufferSize:0,sampleRate:0,buffer:null,reset:function(){"recording"!==o.state||t.disableLogs||console.warn("Stop an active recorder."),f&&"function"==typeof f.clearRecordedData&&f.clearRecordedData(),f=null,l("inactive"),o.blob=null},onStateChanged:function(e){t.disableLogs||console.log("Recorder state changed:",e)},state:"inactive",getState:function(){return o.state},destroy:function(){var e=t.disableLogs;t={disableLogs:!0},o.reset(),l("destroyed"),p=o=null,C.AudioContextConstructor&&(C.AudioContextConstructor.close(),C.AudioContextConstructor=null),t.disableLogs=e,t.disableLogs||console.log("RecordRTC is destroyed.")},version:"5.6.2"};if(!this)return o=p,p;for(var v in p)this[v]=p[v];return o=this,p}
/**
 * {@link RecordRTCConfiguration} is an inner/private helper for {@link RecordRTC}.
 * @summary It configures the 2nd parameter passed over {@link RecordRTC} and returns a valid "config" object.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef RecordRTCConfiguration
 * @class
 * @example
 * var options = RecordRTCConfiguration(mediaStream, options);
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
 * @param {object} config - {type:"video", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, getNativeBlob:true, etc.}
 */
function a(e,t){return t.recorderType||t.type||(t.audio&&t.video?t.type="video":t.audio&&!t.video&&(t.type="audio")),t.recorderType&&!t.type&&(t.recorderType===x||t.recorderType===A?t.type="video":t.recorderType===L?t.type="audio":t.recorderType===M&&(T(e,"audio").length&&T(e,"video").length||!T(e,"audio").length&&T(e,"video").length?t.type="video":T(e,"audio").length&&!T(e,"video").length&&(t.type="audio"))),void 0!==M&&"undefined"!=typeof MediaRecorder&&"requestData"in MediaRecorder.prototype&&(t.mimeType||(t.mimeType="video/webm"),t.type||(t.type=t.mimeType.split("/")[0]),t.bitsPerSecond),t.type||(t.mimeType&&(t.type=t.mimeType.split("/")[0]),t.type||(t.type="audio")),t}
/**
 * {@link GetRecorderType} is an inner/private helper for {@link RecordRTC}.
 * @summary It returns best recorder-type available for your browser.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef GetRecorderType
 * @class
 * @example
 * var RecorderType = GetRecorderType(options);
 * var recorder = new RecorderType(options);
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
 * @param {object} config - {type:"video", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}
 */function s(e,t){var o;return(v||h||g)&&(o=L),"undefined"!=typeof MediaRecorder&&"requestData"in MediaRecorder.prototype&&!v&&(o=M),"video"===t.type&&(v||g)&&(o=x),"canvas"===t.type&&(o=A),k()&&o!==A&&"undefined"!=typeof MediaRecorder&&"requestData"in MediaRecorder.prototype&&(T(e,"video").length||T(e,"audio").length)&&("audio"===t.type?"function"==typeof MediaRecorder.isTypeSupported&&MediaRecorder.isTypeSupported("audio/webm")&&(o=M):"function"==typeof MediaRecorder.isTypeSupported&&MediaRecorder.isTypeSupported("video/webm")&&(o=M)),e instanceof Array&&e.length&&(o=B),t.recorderType&&(o=t.recorderType),!t.disableLogs&&o&&o.name&&console.log("Using recorderType:",o.name||o.constructor.name),!o&&b&&(o=M),o}r.version="5.6.2",e.exports=r,void 0===(i=function(){return r}.apply(t,[]))||(e.exports=i),r.getFromDisk=function(e,t){if(!t)throw"callback is mandatory.";console.log("Getting recorded "+("all"===e?"blobs":e+" blob ")+" from disk!"),D.Fetch((function(o,n){"all"!==e&&n===e+"Blob"&&t&&t(o),"all"===e&&t&&t(o,n.replace("Blob",""))}))},r.writeToDisk=function(e){console.log("Writing recorded blob(s) to disk!"),(e=e||{}).audio&&e.video?e.audio.getDataURL((function(t){e.video.getDataURL((function(e){D.Store({audioBlob:t,videoBlob:e})}))})):e.audio?e.audio.getDataURL((function(e){D.Store({audioBlob:e})})):e.video&&e.video.getDataURL((function(e){D.Store({videoBlob:e})}))};var d;(d=void 0!==o?o:null)&&"undefined"==typeof window&&void 0!==o&&(o.navigator={userAgent:"Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45",getUserMedia:function(){}},o.console||(o.console={}),void 0!==o.console.log&&void 0!==o.console.error||(o.console.error=o.console.log=o.console.log||function(){console.log(arguments)}),"undefined"==typeof document&&(d.document={documentElement:{appendChild:function(){return""}}},document.createElement=document.captureStream=document.mozCaptureStream=function(){var e={getContext:function(){return e},play:function(){},pause:function(){},drawImage:function(){},toDataURL:function(){return""},style:{}};return e},d.HTMLVideoElement=function(){}),"undefined"==typeof location&&(d.location={protocol:"file:",href:"",hash:""}),"undefined"==typeof screen&&(d.screen={width:0,height:0}),void 0===m&&(d.URL={createObjectURL:function(){return""},revokeObjectURL:function(){return""}}),d.window=o);var c=window.requestAnimationFrame;if(void 0===c)if("undefined"!=typeof webkitRequestAnimationFrame)c=webkitRequestAnimationFrame;else if("undefined"!=typeof mozRequestAnimationFrame)c=mozRequestAnimationFrame;else if("undefined"!=typeof msRequestAnimationFrame)c=msRequestAnimationFrame;else if(void 0===c){var u=0;c=function(e,t){var o=(new Date).getTime(),n=Math.max(0,16-(o-u)),i=setTimeout((function(){e(o+n)}),n);return u=o+n,i}}var l=window.cancelAnimationFrame;void 0===l&&("undefined"!=typeof webkitCancelAnimationFrame?l=webkitCancelAnimationFrame:"undefined"!=typeof mozCancelAnimationFrame?l=mozCancelAnimationFrame:"undefined"!=typeof msCancelAnimationFrame?l=msCancelAnimationFrame:void 0===l&&(l=function(e){clearTimeout(e)}));var f=window.AudioContext;void 0===f&&("undefined"!=typeof webkitAudioContext&&(f=webkitAudioContext),"undefined"!=typeof mozAudioContext&&(f=mozAudioContext));var m=window.URL;void 0===m&&"undefined"!=typeof webkitURL&&(m=webkitURL),"undefined"!=typeof navigator&&void 0===navigator.getUserMedia&&(void 0!==navigator.webkitGetUserMedia&&(navigator.getUserMedia=navigator.webkitGetUserMedia),void 0!==navigator.mozGetUserMedia&&(navigator.getUserMedia=navigator.mozGetUserMedia));var h=!(-1===navigator.userAgent.indexOf("Edge")||!navigator.msSaveBlob&&!navigator.msSaveOrOpenBlob),g=!!window.opera||-1!==navigator.userAgent.indexOf("OPR/"),p=navigator.userAgent.toLowerCase().indexOf("firefox")>-1&&"netscape"in window&&/ rv:/.test(navigator.userAgent),v=!g&&!h&&!!navigator.webkitGetUserMedia||R()||-1!==navigator.userAgent.toLowerCase().indexOf("chrome/"),b=/^((?!chrome|android).)*safari/i.test(navigator.userAgent);b&&!v&&-1!==navigator.userAgent.indexOf("CriOS")&&(b=!1,v=!0);var w=window.MediaStream;function y(e){if(0===e)return"0 Bytes";var t=parseInt(Math.floor(Math.log(e)/Math.log(1e3)),10);return(e/Math.pow(1e3,t)).toPrecision(3)+" "+["Bytes","KB","MB","GB","TB"][t]}function S(e,t){if(!e)throw"Blob object is required.";if(!e.type)try{e.type="video/webm"}catch(e){}var o=(e.type||"video/webm").split("/")[1];if(-1!==o.indexOf(";")&&(o=o.split(";")[0]),t&&-1!==t.indexOf(".")){var n=t.split(".");t=n[0],o=n[1]}var i=(t||Math.round(9999999999*Math.random())+888888888)+"."+o;if(void 0!==navigator.msSaveOrOpenBlob)return navigator.msSaveOrOpenBlob(e,i);if(void 0!==navigator.msSaveBlob)return navigator.msSaveBlob(e,i);var r=document.createElement("a");r.href=m.createObjectURL(e),r.download=i,r.style="display:none;opacity:0;color:transparent;",(document.body||document.documentElement).appendChild(r),"function"==typeof r.click?r.click():(r.target="_blank",r.dispatchEvent(new MouseEvent("click",{view:window,bubbles:!0,cancelable:!0}))),m.revokeObjectURL(r.href)}function R(){return"undefined"!=typeof window&&"object"==typeof window.process&&"renderer"===window.process.type||(!(void 0===n||"object"!=typeof n.versions||!n.versions.electron)||"object"==typeof navigator&&"string"==typeof navigator.userAgent&&navigator.userAgent.indexOf("Electron")>=0)}function T(e,t){return e&&e.getTracks?e.getTracks().filter((function(e){return e.kind===(t||"audio")})):[]}void 0===w&&"undefined"!=typeof webkitMediaStream&&(w=webkitMediaStream),void 0!==w&&void 0===w.prototype.stop&&(w.prototype.stop=function(){this.getTracks().forEach((function(e){e.stop()}))}),void 0!==r&&(r.invokeSaveAsDialog=S,r.getTracks=T,r.getSeekableBlob=function(e,t){if("undefined"==typeof EBML)throw new Error("Please link: https://www.webrtc-experiment.com/EBML.js");var o=new EBML.Reader,n=new EBML.Decoder,i=EBML.tools,r=new FileReader;r.onload=function(e){n.decode(this.result).forEach((function(e){o.read(e)})),o.stop();var r=i.makeMetadataSeekable(o.metadatas,o.duration,o.cues),a=this.result.slice(o.metadataSize),s=new Blob([r,a],{type:"video/webm"});t(s)},r.readAsArrayBuffer(e)},r.bytesToSize=y,r.isElectron=R);
/**
 * Storage is a standalone object used by {@link RecordRTC} to store reusable objects e.g. "new AudioContext".
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @example
 * Storage.AudioContext === webkitAudioContext
 * @property {webkitAudioContext} AudioContext - Keeps a reference to AudioContext object.
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 */
var C={};function k(){if(p||b||h)return!0;navigator.appVersion;var e,t,o=navigator.userAgent,n=""+parseFloat(navigator.appVersion),i=parseInt(navigator.appVersion,10);return(v||g)&&(e=o.indexOf("Chrome"),n=o.substring(e+7)),-1!==(t=n.indexOf(";"))&&(n=n.substring(0,t)),-1!==(t=n.indexOf(" "))&&(n=n.substring(0,t)),i=parseInt(""+n,10),isNaN(i)&&(n=""+parseFloat(navigator.appVersion),i=parseInt(navigator.appVersion,10)),i>=49}
/**
 * MediaStreamRecorder is an abstraction layer for {@link https://w3c.github.io/mediacapture-record/MediaRecorder.html|MediaRecorder API}. It is used by {@link RecordRTC} to record MediaStream(s) in both Chrome and Firefox.
 * @summary Runs top over {@link https://w3c.github.io/mediacapture-record/MediaRecorder.html|MediaRecorder API}.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://github.com/muaz-khan|Muaz Khan}
 * @typedef MediaStreamRecorder
 * @class
 * @example
 * var config = {
 *     mimeType: 'video/webm', // vp8, vp9, h264, mkv, opus/vorbis
 *     audioBitsPerSecond : 256 * 8 * 1024,
 *     videoBitsPerSecond : 256 * 8 * 1024,
 *     bitsPerSecond: 256 * 8 * 1024,  // if this is provided, skip above two
 *     checkForInactiveTracks: true,
 *     timeSlice: 1000, // concatenate intervals based blobs
 *     ondataavailable: function() {} // get intervals based blobs
 * }
 * var recorder = new MediaStreamRecorder(mediaStream, config);
 * recorder.record();
 * recorder.stop(function(blob) {
 *     video.src = URL.createObjectURL(blob);
 *
 *     // or
 *     var blob = recorder.blob;
 * });
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
 * @param {object} config - {disableLogs:true, initCallback: function, mimeType: "video/webm", timeSlice: 1000}
 * @throws Will throw an error if first argument "MediaStream" is missing. Also throws error if "MediaRecorder API" are not supported by the browser.
 */function M(e,t){var o=this;if(void 0===e)throw'First argument "MediaStream" is required.';if("undefined"==typeof MediaRecorder)throw"Your browser does not support the Media Recorder API. Please try other modules e.g. WhammyRecorder or StereoAudioRecorder.";if("audio"===(t=t||{mimeType:"video/webm"}).type){var n;if(T(e,"video").length&&T(e,"audio").length)navigator.mozGetUserMedia?(n=new w).addTrack(T(e,"audio")[0]):n=new w(T(e,"audio")),e=n;t.mimeType&&-1!==t.mimeType.toString().toLowerCase().indexOf("audio")||(t.mimeType=v?"audio/webm":"audio/ogg"),t.mimeType&&"audio/ogg"!==t.mimeType.toString().toLowerCase()&&navigator.mozGetUserMedia&&(t.mimeType="audio/ogg")}var i,r=[];function a(){o.timestamps.push((new Date).getTime()),"function"==typeof t.onTimeStamp&&t.onTimeStamp(o.timestamps[o.timestamps.length-1],o.timestamps)}function s(e){return i&&i.mimeType?i.mimeType:e.mimeType||"video/webm"}function d(){r=[],i=null,o.timestamps=[]}this.getArrayOfBlobs=function(){return r},this.record=function(){o.blob=null,o.clearRecordedData(),o.timestamps=[],c=[],r=[];var n=t;t.disableLogs||console.log("Passing following config over MediaRecorder API.",n),i&&(i=null),v&&!k()&&(n="video/vp8"),"function"==typeof MediaRecorder.isTypeSupported&&n.mimeType&&(MediaRecorder.isTypeSupported(n.mimeType)||(t.disableLogs||console.warn("MediaRecorder API seems unable to record mimeType:",n.mimeType),n.mimeType="audio"===t.type?"audio/webm":"video/webm"));try{i=new MediaRecorder(e,n),t.mimeType=n.mimeType}catch(t){i=new MediaRecorder(e)}n.mimeType&&!MediaRecorder.isTypeSupported&&"canRecordMimeType"in i&&!1===i.canRecordMimeType(n.mimeType)&&(t.disableLogs||console.warn("MediaRecorder API seems unable to record mimeType:",n.mimeType)),i.ondataavailable=function(e){if(e.data&&c.push("ondataavailable: "+y(e.data.size)),"number"!=typeof t.timeSlice)!e.data||!e.data.size||e.data.size<100||o.blob?o.recordingCallback&&(o.recordingCallback(new Blob([],{type:s(n)})),o.recordingCallback=null):(o.blob=t.getNativeBlob?e.data:new Blob([e.data],{type:s(n)}),o.recordingCallback&&(o.recordingCallback(o.blob),o.recordingCallback=null));else if(e.data&&e.data.size&&(r.push(e.data),a(),"function"==typeof t.ondataavailable)){var i=t.getNativeBlob?e.data:new Blob([e.data],{type:s(n)});t.ondataavailable(i)}},i.onstart=function(){c.push("started")},i.onpause=function(){c.push("paused")},i.onresume=function(){c.push("resumed")},i.onstop=function(){c.push("stopped")},i.onerror=function(e){e&&(e.name||(e.name="UnknownError"),c.push("error: "+e),t.disableLogs||(-1!==e.name.toString().toLowerCase().indexOf("invalidstate")?console.error("The MediaRecorder is not in a state in which the proposed operation is allowed to be executed.",e):-1!==e.name.toString().toLowerCase().indexOf("notsupported")?console.error("MIME type (",n.mimeType,") is not supported.",e):-1!==e.name.toString().toLowerCase().indexOf("security")?console.error("MediaRecorder security error",e):"OutOfMemory"===e.name?console.error("The UA has exhaused the available memory. User agents SHOULD provide as much additional information as possible in the message attribute.",e):"IllegalStreamModification"===e.name?console.error("A modification to the stream has occurred that makes it impossible to continue recording. An example would be the addition of a Track while recording is occurring. User agents SHOULD provide as much additional information as possible in the message attribute.",e):"OtherRecordingError"===e.name?console.error("Used for an fatal error other than those listed above. User agents SHOULD provide as much additional information as possible in the message attribute.",e):"GenericError"===e.name?console.error("The UA cannot provide the codec or recording option that has been requested.",e):console.error("MediaRecorder Error",e)),function(e){if(!o.manuallyStopped&&i&&"inactive"===i.state)return delete t.timeslice,void i.start(6e5);setTimeout(void 0,1e3)}(),"inactive"!==i.state&&"stopped"!==i.state&&i.stop())},"number"==typeof t.timeSlice?(a(),i.start(t.timeSlice)):i.start(864e5),t.initCallback&&t.initCallback()},this.timestamps=[],this.stop=function(e){e=e||function(){},o.manuallyStopped=!0,i&&(this.recordingCallback=e,"recording"===i.state&&i.stop(),"number"==typeof t.timeSlice&&setTimeout((function(){o.blob=new Blob(r,{type:s(t)}),o.recordingCallback(o.blob)}),100))},this.pause=function(){i&&"recording"===i.state&&i.pause()},this.resume=function(){i&&"paused"===i.state&&i.resume()},this.clearRecordedData=function(){i&&"recording"===i.state&&o.stop(d),d()},this.getInternalRecorder=function(){return i},this.blob=null,this.getState=function(){return i&&i.state||"inactive"};var c=[];this.getAllStates=function(){return c},void 0===t.checkForInactiveTracks&&(t.checkForInactiveTracks=!1);o=this;!function n(){if(i&&!1!==t.checkForInactiveTracks)return!1===function(){if("active"in e){if(!e.active)return!1}else if("ended"in e&&e.ended)return!1;return!0}()?(t.disableLogs||console.log("MediaStream seems stopped."),void o.stop()):void setTimeout(n,1e3)}(),this.name="MediaStreamRecorder",this.toString=function(){return this.name}}
/**
 * StereoAudioRecorder is a standalone class used by {@link RecordRTC} to bring "stereo" audio-recording in chrome.
 * @summary JavaScript standalone object for stereo audio recording.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef StereoAudioRecorder
 * @class
 * @example
 * var recorder = new StereoAudioRecorder(MediaStream, {
 *     sampleRate: 44100,
 *     bufferSize: 4096
 * });
 * recorder.record();
 * recorder.stop(function(blob) {
 *     video.src = URL.createObjectURL(blob);
 * });
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
 * @param {object} config - {sampleRate: 44100, bufferSize: 4096, numberOfAudioChannels: 1, etc.}
 */
function L(e,t){if(!T(e,"audio").length)throw"Your stream has no audio tracks.";var o,n=this,i=[],a=[],s=!1,d=0,c=2,u=(t=t||{}).desiredSampRate;function l(){if(!1===t.checkForInactiveTracks)return!0;if("active"in e){if(!e.active)return!1}else if("ended"in e&&e.ended)return!1;return!0}function f(e,t){function o(e,t){var o,n=e.numberOfAudioChannels,i=e.leftBuffers.slice(0),r=e.rightBuffers.slice(0),a=e.sampleRate,s=e.internalInterleavedLength,d=e.desiredSampRate;function c(e,t,o){var n=Math.round(e.length*(t/o)),i=[],r=Number((e.length-1)/(n-1));i[0]=e[0];for(var a=1;a<n-1;a++){var s=a*r,d=Number(Math.floor(s)).toFixed(),c=Number(Math.ceil(s)).toFixed(),l=s-d;i[a]=u(e[d],e[c],l)}return i[n-1]=e[e.length-1],i}function u(e,t,o){return e+(t-e)*o}function l(e,t){for(var o=new Float64Array(t),n=0,i=e.length,r=0;r<i;r++){var a=e[r];o.set(a,n),n+=a.length}return o}function f(e,t,o){for(var n=o.length,i=0;i<n;i++)e.setUint8(t+i,o.charCodeAt(i))}2===n&&(i=l(i,s),r=l(r,s),d&&(i=c(i,d,a),r=c(r,d,a))),1===n&&(i=l(i,s),d&&(i=c(i,d,a))),d&&(a=d),2===n&&(o=function(e,t){for(var o=e.length+t.length,n=new Float64Array(o),i=0,r=0;r<o;)n[r++]=e[i],n[r++]=t[i],i++;return n}(i,r)),1===n&&(o=i);var m=o.length,h=new ArrayBuffer(44+2*m),g=new DataView(h);f(g,0,"RIFF"),g.setUint32(4,36+2*m,!0),f(g,8,"WAVE"),f(g,12,"fmt "),g.setUint32(16,16,!0),g.setUint16(20,1,!0),g.setUint16(22,n,!0),g.setUint32(24,a,!0),g.setUint32(28,a*n*2,!0),g.setUint16(32,2*n,!0),g.setUint16(34,16,!0),f(g,36,"data"),g.setUint32(40,2*m,!0);for(var p=m,v=44,b=0;b<p;b++)g.setInt16(v,32767*o[b],!0),v+=2;if(t)return t({buffer:h,view:g});postMessage({buffer:h,view:g})}if(e.noWorker)o(e,(function(e){t(e.buffer,e.view)}));else{var n,i,r,a=(n=o,i=m.createObjectURL(new Blob([n.toString(),";this.onmessage =  function (eee) {"+n.name+"(eee.data);}"],{type:"application/javascript"})),(r=new Worker(i)).workerURL=i,r);a.onmessage=function(e){t(e.data.buffer,e.data.view),m.revokeObjectURL(a.workerURL),a.terminate()},a.postMessage(e)}}!0===t.leftChannel&&(c=1),1===t.numberOfAudioChannels&&(c=1),(!c||c<1)&&(c=2),t.disableLogs||console.log("StereoAudioRecorder is set to record number of channels: "+c),void 0===t.checkForInactiveTracks&&(t.checkForInactiveTracks=!0),this.record=function(){if(!1===l())throw"Please make sure MediaStream is active.";y(),R=w=!1,s=!0,void 0!==t.timeSlice&&k()},this.stop=function(e){e=e||function(){},s=!1,f({desiredSampRate:u,sampleRate:b,numberOfAudioChannels:c,internalInterleavedLength:d,leftBuffers:i,rightBuffers:1===c?[]:a,noWorker:t.noWorker},(function(t,o){n.blob=new Blob([o],{type:"audio/wav"}),n.buffer=new ArrayBuffer(o.buffer.byteLength),n.view=o,n.sampleRate=u||b,n.bufferSize=v,n.length=d,R=!1,e&&e(n.blob)}))},void 0===r.Storage&&(r.Storage={AudioContextConstructor:null,AudioContext:window.AudioContext||window.webkitAudioContext}),r.Storage.AudioContextConstructor&&"closed"!==r.Storage.AudioContextConstructor.state||(r.Storage.AudioContextConstructor=new r.Storage.AudioContext);var h=r.Storage.AudioContextConstructor,g=h.createMediaStreamSource(e),p=[0,256,512,1024,2048,4096,8192,16384],v=void 0===t.bufferSize?4096:t.bufferSize;if(-1===p.indexOf(v)&&(t.disableLogs||console.log("Legal values for buffer-size are "+JSON.stringify(p,null,"\t"))),h.createJavaScriptNode)o=h.createJavaScriptNode(v,c,c);else{if(!h.createScriptProcessor)throw"WebAudio API has no support on this browser.";o=h.createScriptProcessor(v,c,c)}g.connect(o),t.bufferSize||(v=o.bufferSize);var b=void 0!==t.sampleRate?t.sampleRate:h.sampleRate||44100;(b<22050||b>96e3)&&(t.disableLogs||console.log("sample-rate must be under range 22050 and 96000.")),t.disableLogs||t.desiredSampRate&&console.log("Desired sample-rate: "+t.desiredSampRate);var w=!1;function y(){i=[],a=[],d=0,R=!1,s=!1,w=!1,h=null,n.leftchannel=i,n.rightchannel=a,n.numberOfAudioChannels=c,n.desiredSampRate=u,n.sampleRate=b,n.recordingLength=d,C={left:[],right:[],recordingLength:0}}function S(){o&&(o.onaudioprocess=null,o.disconnect(),o=null),g&&(g.disconnect(),g=null),y()}this.pause=function(){w=!0},this.resume=function(){if(!1===l())throw"Please make sure MediaStream is active.";if(!s)return t.disableLogs||console.log("Seems recording has been restarted."),void this.record();w=!1},this.clearRecordedData=function(){t.checkForInactiveTracks=!1,s&&this.stop(S),S()},this.name="StereoAudioRecorder",this.toString=function(){return this.name};var R=!1;o.onaudioprocess=function(e){if(!w)if(!1===l()&&(t.disableLogs||console.log("MediaStream seems stopped."),o.disconnect(),s=!1),s){R||(R=!0,t.onAudioProcessStarted&&t.onAudioProcessStarted(),t.initCallback&&t.initCallback());var r=e.inputBuffer.getChannelData(0),u=new Float32Array(r);if(i.push(u),2===c){var f=e.inputBuffer.getChannelData(1),m=new Float32Array(f);a.push(m)}d+=v,n.recordingLength=d,void 0!==t.timeSlice&&(C.recordingLength+=v,C.left.push(u),2===c&&C.right.push(m))}else g&&(g.disconnect(),g=null)},h.createMediaStreamDestination?o.connect(h.createMediaStreamDestination()):o.connect(h.destination),this.leftchannel=i,this.rightchannel=a,this.numberOfAudioChannels=c,this.desiredSampRate=u,this.sampleRate=b,n.recordingLength=d;var C={left:[],right:[],recordingLength:0};function k(){s&&"function"==typeof t.ondataavailable&&void 0!==t.timeSlice&&(C.left.length?(f({desiredSampRate:u,sampleRate:b,numberOfAudioChannels:c,internalInterleavedLength:C.recordingLength,leftBuffers:C.left,rightBuffers:1===c?[]:C.right},(function(e,o){var n=new Blob([o],{type:"audio/wav"});t.ondataavailable(n),setTimeout(k,t.timeSlice)})),C={left:[],right:[],recordingLength:0}):setTimeout(k,t.timeSlice))}}
/**
 * CanvasRecorder is a standalone class used by {@link RecordRTC} to bring HTML5-Canvas recording into video WebM. It uses HTML2Canvas library and runs top over {@link Whammy}.
 * @summary HTML2Canvas recording into video WebM.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef CanvasRecorder
 * @class
 * @example
 * var recorder = new CanvasRecorder(htmlElement, { disableLogs: true, useWhammyRecorder: true });
 * recorder.record();
 * recorder.stop(function(blob) {
 *     video.src = URL.createObjectURL(blob);
 * });
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {HTMLElement} htmlElement - querySelector/getElementById/getElementsByTagName[0]/etc.
 * @param {object} config - {disableLogs:true, initCallback: function}
 */
function A(e,t){if("undefined"==typeof html2canvas)throw"Please link: https://www.webrtc-experiment.com/screenshot.js";(t=t||{}).frameInterval||(t.frameInterval=10);var o=!1;["captureStream","mozCaptureStream","webkitCaptureStream"].forEach((function(e){e in document.createElement("canvas")&&(o=!0)}));var n,i,r,a=!(!window.webkitRTCPeerConnection&&!window.webkitGetUserMedia||!window.chrome),s=50,d=navigator.userAgent.match(/Chrom(e|ium)\/([0-9]+)\./);if(a&&d&&d[2]&&(s=parseInt(d[2],10)),a&&s<52&&(o=!1),t.useWhammyRecorder&&(o=!1),o)if(t.disableLogs||console.log("Your browser supports both MediRecorder API and canvas.captureStream!"),e instanceof HTMLCanvasElement)n=e;else{if(!(e instanceof CanvasRenderingContext2D))throw"Please pass either HTMLCanvasElement or CanvasRenderingContext2D.";n=e.canvas}else navigator.mozGetUserMedia&&(t.disableLogs||console.error("Canvas recording is NOT supported in Firefox."));this.record=function(){if(r=!0,o&&!t.useWhammyRecorder){var e;"captureStream"in n?e=n.captureStream(25):"mozCaptureStream"in n?e=n.mozCaptureStream(25):"webkitCaptureStream"in n&&(e=n.webkitCaptureStream(25));try{var a=new w;a.addTrack(T(e,"video")[0]),e=a}catch(e){}if(!e)throw"captureStream API are NOT available.";(i=new M(e,{mimeType:t.mimeType||"video/webm"})).record()}else m.frames=[],f=(new Date).getTime(),l();t.initCallback&&t.initCallback()},this.getWebPImages=function(o){if("canvas"===e.nodeName.toLowerCase()){var n=m.frames.length;m.frames.forEach((function(e,o){var i=n-o;t.disableLogs||console.log(i+"/"+n+" frames remaining"),t.onEncodingCallback&&t.onEncodingCallback(i,n);var r=e.image.toDataURL("image/webp",1);m.frames[o].image=r})),t.disableLogs||console.log("Generating WebM"),o()}else o()},this.stop=function(e){r=!1;var n=this;o&&i?i.stop(e):this.getWebPImages((function(){m.compile((function(o){t.disableLogs||console.log("Recording finished!"),n.blob=o,n.blob.forEach&&(n.blob=new Blob([],{type:"video/webm"})),e&&e(n.blob),m.frames=[]}))}))};var c=!1;function u(){m.frames=[],r=!1,c=!1}function l(){if(c)return f=(new Date).getTime(),setTimeout(l,500);if("canvas"===e.nodeName.toLowerCase()){var o=(new Date).getTime()-f;return f=(new Date).getTime(),m.frames.push({image:(n=document.createElement("canvas"),i=n.getContext("2d"),n.width=e.width,n.height=e.height,i.drawImage(e,0,0),n),duration:o}),void(r&&setTimeout(l,t.frameInterval))}var n,i;html2canvas(e,{grabMouse:void 0===t.showMousePointer||t.showMousePointer,onrendered:function(e){var o=(new Date).getTime()-f;if(!o)return setTimeout(l,t.frameInterval);f=(new Date).getTime(),m.frames.push({image:e.toDataURL("image/webp",1),duration:o}),r&&setTimeout(l,t.frameInterval)}})}this.pause=function(){c=!0,i instanceof M&&i.pause()},this.resume=function(){c=!1,i instanceof M?i.resume():r||this.record()},this.clearRecordedData=function(){r&&this.stop(u),u()},this.name="CanvasRecorder",this.toString=function(){return this.name};var f=(new Date).getTime(),m=new U.Video(100)}
/**
 * WhammyRecorder is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It runs top over {@link Whammy}.
 * @summary Video recording feature in Chrome.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef WhammyRecorder
 * @class
 * @example
 * var recorder = new WhammyRecorder(mediaStream);
 * recorder.record();
 * recorder.stop(function(blob) {
 *     video.src = URL.createObjectURL(blob);
 * });
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
 * @param {object} config - {disableLogs: true, initCallback: function, video: HTMLVideoElement, etc.}
 */
function x(e,t){function o(e){e=void 0!==e?e:10;var t=(new Date).getTime()-d;return t?r?(d=(new Date).getTime(),setTimeout(o,100)):(d=(new Date).getTime(),s.paused&&s.play(),l.drawImage(s,0,0,u.width,u.height),c.frames.push({duration:t,image:u.toDataURL("image/webp")}),void(i||setTimeout(o,e,e))):setTimeout(o,e,e)}function n(e,t,o,n,i){var r=document.createElement("canvas");r.width=u.width,r.height=u.height;var a,s,d,c=r.getContext("2d"),l=[],f=-1===t,m=t&&t>0&&t<=e.length?t:e.length,h=0,g=0,p=0,v=Math.sqrt(Math.pow(255,2)+Math.pow(255,2)+Math.pow(255,2)),b=o&&o>=0&&o<=1?o:0,w=n&&n>=0&&n<=1?n:0,y=!1;s=-1,d=(a={length:m,functionToLoop:function(t,o){var n,i,r,a=function(){!y&&r-n<=r*w||(f&&(y=!0),l.push(e[o])),t()};if(y)a();else{var s=new Image;s.onload=function(){c.drawImage(s,0,0,u.width,u.height);var e=c.getImageData(0,0,u.width,u.height);n=0,i=e.data.length,r=e.data.length/4;for(var t=0;t<i;t+=4){var o={r:e.data[t],g:e.data[t+1],b:e.data[t+2]};Math.sqrt(Math.pow(o.r-h,2)+Math.pow(o.g-g,2)+Math.pow(o.b-p,2))<=v*b&&n++}a()},s.src=e[o].image}},callback:function(){(l=l.concat(e.slice(m))).length<=0&&l.push(e[e.length-1]),i(l)}}).length,function e(){++s!==d?setTimeout((function(){a.functionToLoop(e,s)}),1):a.callback()}()}(t=t||{}).frameInterval||(t.frameInterval=10),t.disableLogs||console.log("Using frames-interval:",t.frameInterval),this.record=function(){var n,i;t.width||(t.width=320),t.height||(t.height=240),t.video||(t.video={width:t.width,height:t.height}),t.canvas||(t.canvas={width:t.width,height:t.height}),u.width=t.canvas.width||320,u.height=t.canvas.height||240,l=u.getContext("2d"),t.video&&t.video instanceof HTMLVideoElement?(s=t.video.cloneNode(),t.initCallback&&t.initCallback()):(s=document.createElement("video"),n=e,"srcObject"in(i=s)?i.srcObject=n:"mozSrcObject"in i?i.mozSrcObject=n:i.srcObject=n,s.onloadedmetadata=function(){t.initCallback&&t.initCallback()},s.width=t.video.width,s.height=t.video.height),s.muted=!0,s.play(),d=(new Date).getTime(),c=new U.Video,t.disableLogs||(console.log("canvas resolutions",u.width,"*",u.height),console.log("video width/height",s.width||u.width,"*",s.height||u.height)),o(t.frameInterval)};var i=!1;this.stop=function(e){e=e||function(){},i=!0;var o=this;setTimeout((function(){n(c.frames,-1,null,null,(function(n){c.frames=n,t.advertisement&&t.advertisement.length&&(c.frames=t.advertisement.concat(c.frames)),c.compile((function(t){o.blob=t,o.blob.forEach&&(o.blob=new Blob([],{type:"video/webm"})),e&&e(o.blob)}))}))}),10)};var r=!1;function a(){c.frames=[],i=!0,r=!1}this.pause=function(){r=!0},this.resume=function(){r=!1,i&&this.record()},this.clearRecordedData=function(){i||this.stop(a),a()},this.name="WhammyRecorder",this.toString=function(){return this.name};var s,d,c,u=document.createElement("canvas"),l=u.getContext("2d")}void 0!==f?C.AudioContext=f:"undefined"!=typeof webkitAudioContext&&(C.AudioContext=webkitAudioContext),void 0!==r&&(r.Storage=C),void 0!==r&&(r.MediaStreamRecorder=M),void 0!==r&&(r.StereoAudioRecorder=L),void 0!==r&&(r.CanvasRecorder=A),void 0!==r&&(r.WhammyRecorder=x);
/**
 * Whammy is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It is written by {@link https://github.com/antimatter15|antimatter15}
 * @summary A real time javascript webm encoder based on a canvas hack.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef Whammy
 * @class
 * @example
 * var recorder = new Whammy().Video(15);
 * recorder.add(context || canvas || dataURL);
 * var output = recorder.compile();
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 */
var U=function(){function e(e){this.frames=[],this.duration=e||1,this.quality=.8}function t(e){function t(e,t,o){return[{data:e,id:231}].concat(o.map((function(e){var o=function(e){var t=0;e.keyframe&&(t|=128);e.invisible&&(t|=8);e.lacing&&(t|=e.lacing<<1);e.discardable&&(t|=1);if(e.trackNum>127)throw"TrackNumber > 127 not supported";return[128|e.trackNum,e.timecode>>8,255&e.timecode,t].map((function(e){return String.fromCharCode(e)})).join("")+e.frame}({discardable:0,frame:e.data.slice(4),invisible:0,keyframe:1,lacing:0,trackNum:1,timecode:Math.round(t)});return t+=e.duration,{data:o,id:163}})))}function o(e){for(var t=[];e>0;)t.push(255&e),e>>=8;return new Uint8Array(t.reverse())}function n(e){var t=[];e=(e.length%8?new Array(9-e.length%8).join("0"):"")+e;for(var o=0;o<e.length;o+=8)t.push(parseInt(e.substr(o,8),2));return new Uint8Array(t)}function i(e){for(var t=[],r=0;r<e.length;r++){var a=e[r].data;"object"==typeof a&&(a=i(a)),"number"==typeof a&&(a=n(a.toString(2))),"string"==typeof a&&(a=new Uint8Array(a.split("").map((function(e){return e.charCodeAt(0)}))));var s=a.size||a.byteLength||a.length,d=Math.ceil(Math.ceil(Math.log(s)/Math.log(2))/8),c=s.toString(2),u=new Array(7*d+7+1-c.length).join("0")+c,l=new Array(d).join("0")+"1"+u;t.push(o(e[r].id)),t.push(n(l)),t.push(a)}return new Blob(t,{type:"video/webm"})}function r(e,t){return parseInt(e.substr(t+4,4).split("").map((function(e){var t=e.charCodeAt(0).toString(2);return new Array(8-t.length+1).join("0")+t})).join(""),2)}function a(e){for(var t=0,o={};t<e.length;){var n=e.substr(t,4),i=r(e,t),s=e.substr(t+4+4,i);t+=8+i,o[n]=o[n]||[],"RIFF"===n||"LIST"===n?o[n].push(a(s)):o[n].push(s)}return o}var s=new function(e){var o=function(e){if(!e[0])return void postMessage({error:"Something went wrong. Maybe WebP format is not supported in the current browser."});for(var t=e[0].width,o=e[0].height,n=e[0].duration,i=1;i<e.length;i++)n+=e[i].duration;return{duration:n,width:t,height:o}}(e);if(!o)return[];for(var n,r=[{id:440786851,data:[{data:1,id:17030},{data:1,id:17143},{data:4,id:17138},{data:8,id:17139},{data:"webm",id:17026},{data:2,id:17031},{data:2,id:17029}]},{id:408125543,data:[{id:357149030,data:[{data:1e6,id:2807729},{data:"whammy",id:19840},{data:"whammy",id:22337},{data:(n=o.duration,[].slice.call(new Uint8Array(new Float64Array([n]).buffer),0).map((function(e){return String.fromCharCode(e)})).reverse().join("")),id:17545}]},{id:374648427,data:[{id:174,data:[{data:1,id:215},{data:1,id:29637},{data:0,id:156},{data:"und",id:2274716},{data:"V_VP8",id:134},{data:"VP8",id:2459272},{data:1,id:131},{id:224,data:[{data:o.width,id:176},{data:o.height,id:186}]}]}]}]}],a=0,s=0;a<e.length;){var d=[],c=0;do{d.push(e[a]),c+=e[a].duration,a++}while(a<e.length&&c<3e4);var u={id:524531317,data:t(s,0,d)};r[1].data.push(u),s+=c}return i(r)}(e.map((function(e){var t=function(e){for(var t=e.RIFF[0].WEBP[0],o=t.indexOf("*"),n=0,i=[];n<4;n++)i[n]=t.charCodeAt(o+3+n);return{width:16383&(i[1]<<8|i[0]),height:16383&(i[3]<<8|i[2]),data:t,riff:e}}(a(atob(e.image.slice(23))));return t.duration=e.duration,t})));postMessage(s)}return e.prototype.add=function(e,t){if("canvas"in e&&(e=e.canvas),"toDataURL"in e&&(e=e.toDataURL("image/webp",this.quality)),!/^data:image\/webp;base64,/gi.test(e))throw"Input must be formatted properly as a base64 encoded DataURI of type image/webp";this.frames.push({image:e,duration:t||this.duration})},e.prototype.compile=function(e){var o,n,i,r=(o=t,n=m.createObjectURL(new Blob([o.toString(),"this.onmessage =  function (eee) {"+o.name+"(eee.data);}"],{type:"application/javascript"})),i=new Worker(n),m.revokeObjectURL(n),i);r.onmessage=function(t){t.data.error?console.error(t.data.error):e(t.data)},r.postMessage(this.frames)},{Video:e}}();void 0!==r&&(r.Whammy=U);
/**
 * DiskStorage is a standalone object used by {@link RecordRTC} to store recorded blobs in IndexedDB storage.
 * @summary Writing blobs into IndexedDB.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @example
 * DiskStorage.Store({
 *     audioBlob: yourAudioBlob,
 *     videoBlob: yourVideoBlob,
 * });
 * DiskStorage.Fetch(function(dataURL, type) {
 *     if(type === 'audioBlob') { }
 *     if(type === 'videoBlob') { }
 * });
 * // DiskStorage.dataStoreName = 'recordRTC';
 * // DiskStorage.onError = function(error) { };
 * @property {function} init - This method must be called once to initialize IndexedDB ObjectStore. Though, it is auto-used internally.
 * @property {function} Fetch - This method fetches stored blobs from IndexedDB.
 * @property {function} Store - This method stores blobs in IndexedDB.
 * @property {function} onError - This function is invoked for any known/unknown error.
 * @property {string} dataStoreName - Name of the ObjectStore created in IndexedDB storage.
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 */var D={init:function(){var e=this;if("undefined"!=typeof indexedDB&&void 0!==indexedDB.open){var t,o=this.dbName||location.href.replace(/\/|:|#|%|\.|\[|\]/g,""),n=indexedDB.open(o,1);n.onerror=e.onError,n.onsuccess=function(){((t=n.result).onerror=e.onError,t.setVersion)?1!==t.version?t.setVersion(1).onsuccess=function(){i(t),r()}:r():r()},n.onupgradeneeded=function(e){i(e.target.result)}}else console.error("IndexedDB API are not available in this browser.");function i(t){t.createObjectStore(e.dataStoreName)}function r(){var o=t.transaction([e.dataStoreName],"readwrite");function n(t){o.objectStore(e.dataStoreName).get(t).onsuccess=function(o){e.callback&&e.callback(o.target.result,t)}}e.videoBlob&&o.objectStore(e.dataStoreName).put(e.videoBlob,"videoBlob"),e.audioBlob&&o.objectStore(e.dataStoreName).put(e.audioBlob,"audioBlob"),n("audioBlob"),n("videoBlob")}},Fetch:function(e){return this.callback=e,this.init(),this},Store:function(e){return this.audioBlob=e.audioBlob,this.videoBlob=e.videoBlob,this.init(),this},onError:function(e){console.error(JSON.stringify(e,null,"\t"))},dataStoreName:"recordRTC",dbName:null};function O(e,t){!function(e){void 0===r&&e&&"undefined"==typeof window&&void 0!==o&&(o.navigator={userAgent:"Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45",getUserMedia:function(){}},o.console||(o.console={}),void 0!==o.console.log&&void 0!==o.console.error||(o.console.error=o.console.log=o.console.log||function(){console.log(arguments)}),"undefined"==typeof document&&(e.document={documentElement:{appendChild:function(){return""}}},document.createElement=document.captureStream=document.mozCaptureStream=function(){var e={getContext:function(){return e},play:function(){},pause:function(){},drawImage:function(){},toDataURL:function(){return""},style:{}};return e},e.HTMLVideoElement=function(){}),"undefined"==typeof location&&(e.location={protocol:"file:",href:"",hash:""}),"undefined"==typeof screen&&(e.screen={width:0,height:0}),void 0===u&&(e.URL={createObjectURL:function(){return""},revokeObjectURL:function(){return""}}),e.window=o)}(void 0!==o?o:null),t=t||"multi-streams-mixer";var n=[],i=!1,a=document.createElement("canvas"),s=a.getContext("2d");a.style.opacity=0,a.style.position="absolute",a.style.zIndex=-1,a.style.top="-1000em",a.style.left="-1000em",a.className=t,(document.body||document.documentElement).appendChild(a),this.disableLogs=!1,this.frameInterval=10,this.width=360,this.height=240,this.useGainNode=!0;var d=this,c=window.AudioContext;void 0===c&&("undefined"!=typeof webkitAudioContext&&(c=webkitAudioContext),"undefined"!=typeof mozAudioContext&&(c=mozAudioContext));var u=window.URL;void 0===u&&"undefined"!=typeof webkitURL&&(u=webkitURL),"undefined"!=typeof navigator&&void 0===navigator.getUserMedia&&(void 0!==navigator.webkitGetUserMedia&&(navigator.getUserMedia=navigator.webkitGetUserMedia),void 0!==navigator.mozGetUserMedia&&(navigator.getUserMedia=navigator.mozGetUserMedia));var l=window.MediaStream;void 0===l&&"undefined"!=typeof webkitMediaStream&&(l=webkitMediaStream),void 0!==l&&void 0===l.prototype.stop&&(l.prototype.stop=function(){this.getTracks().forEach((function(e){e.stop()}))});var f={};function m(){if(!i){var e=n.length,t=!1,o=[];if(n.forEach((function(e){e.stream||(e.stream={}),e.stream.fullcanvas?t=e:o.push(e)})),t)a.width=t.stream.width,a.height=t.stream.height;else if(o.length){a.width=e>1?2*o[0].width:o[0].width;var r=1;3!==e&&4!==e||(r=2),5!==e&&6!==e||(r=3),7!==e&&8!==e||(r=4),9!==e&&10!==e||(r=5),a.height=o[0].height*r}else a.width=d.width||360,a.height=d.height||240;t&&t instanceof HTMLVideoElement&&h(t),o.forEach((function(e,t){h(e,t)})),setTimeout(m,d.frameInterval)}}function h(e,t){if(!i){var o=0,n=0,r=e.width,a=e.height;1===t&&(o=e.width),2===t&&(n=e.height),3===t&&(o=e.width,n=e.height),4===t&&(n=2*e.height),5===t&&(o=e.width,n=2*e.height),6===t&&(n=3*e.height),7===t&&(o=e.width,n=3*e.height),void 0!==e.stream.left&&(o=e.stream.left),void 0!==e.stream.top&&(n=e.stream.top),void 0!==e.stream.width&&(r=e.stream.width),void 0!==e.stream.height&&(a=e.stream.height),s.drawImage(e,o,n,r,a),"function"==typeof e.stream.onRender&&e.stream.onRender(s,o,n,r,a,t)}}function g(e){var o=document.createElement("video");return function(e,t){"srcObject"in t?t.srcObject=e:"mozSrcObject"in t?t.mozSrcObject=e:t.srcObject=e}(e,o),o.className=t,o.muted=!0,o.volume=0,o.width=e.width||d.width||360,o.height=e.height||d.height||240,o.play(),o}function p(t){n=[],(t=t||e).forEach((function(e){if(e.getTracks().filter((function(e){return"video"===e.kind})).length){var t=g(e);t.stream=e,n.push(t)}}))}void 0!==c?f.AudioContext=c:"undefined"!=typeof webkitAudioContext&&(f.AudioContext=webkitAudioContext),this.startDrawingFrames=function(){m()},this.appendStreams=function(t){if(!t)throw"First parameter is required.";t instanceof Array||(t=[t]),t.forEach((function(t){var o=new l;if(t.getTracks().filter((function(e){return"video"===e.kind})).length){var i=g(t);i.stream=t,n.push(i),o.addTrack(t.getTracks().filter((function(e){return"video"===e.kind}))[0])}if(t.getTracks().filter((function(e){return"audio"===e.kind})).length){var r=d.audioContext.createMediaStreamSource(t);d.audioDestination=d.audioContext.createMediaStreamDestination(),r.connect(d.audioDestination),o.addTrack(d.audioDestination.stream.getTracks().filter((function(e){return"audio"===e.kind}))[0])}e.push(o)}))},this.releaseStreams=function(){n=[],i=!0,d.gainNode&&(d.gainNode.disconnect(),d.gainNode=null),d.audioSources.length&&(d.audioSources.forEach((function(e){e.disconnect()})),d.audioSources=[]),d.audioDestination&&(d.audioDestination.disconnect(),d.audioDestination=null),d.audioContext&&d.audioContext.close(),d.audioContext=null,s.clearRect(0,0,a.width,a.height),a.stream&&(a.stream.stop(),a.stream=null)},this.resetVideoStreams=function(e){!e||e instanceof Array||(e=[e]),p(e)},this.name="MultiStreamsMixer",this.toString=function(){return this.name},this.getMixedStream=function(){i=!1;var t=function(){var e;p(),"captureStream"in a?e=a.captureStream():"mozCaptureStream"in a?e=a.mozCaptureStream():d.disableLogs||console.error("Upgrade to latest Chrome or otherwise enable this flag: chrome://flags/#enable-experimental-web-platform-features");var t=new l;return e.getTracks().filter((function(e){return"video"===e.kind})).forEach((function(e){t.addTrack(e)})),a.stream=t,t}(),o=function(){f.AudioContextConstructor||(f.AudioContextConstructor=new f.AudioContext);d.audioContext=f.AudioContextConstructor,d.audioSources=[],!0===d.useGainNode&&(d.gainNode=d.audioContext.createGain(),d.gainNode.connect(d.audioContext.destination),d.gainNode.gain.value=0);var t=0;if(e.forEach((function(e){if(e.getTracks().filter((function(e){return"audio"===e.kind})).length){t++;var o=d.audioContext.createMediaStreamSource(e);!0===d.useGainNode&&o.connect(d.gainNode),d.audioSources.push(o)}})),!t)return;return d.audioDestination=d.audioContext.createMediaStreamDestination(),d.audioSources.forEach((function(e){e.connect(d.audioDestination)})),d.audioDestination.stream}();return o&&o.getTracks().filter((function(e){return"audio"===e.kind})).forEach((function(e){t.addTrack(e)})),e.forEach((function(e){e.fullcanvas&&!0})),t}}
/**
 * MultiStreamRecorder can record multiple videos in single container.
 * @summary Multi-videos recorder.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef MultiStreamRecorder
 * @class
 * @example
 * var options = {
 *     mimeType: 'video/webm'
 * }
 * var recorder = new MultiStreamRecorder(ArrayOfMediaStreams, options);
 * recorder.record();
 * recorder.stop(function(blob) {
 *     video.src = URL.createObjectURL(blob);
 *
 *     // or
 *     var blob = recorder.blob;
 * });
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStreams} mediaStreams - Array of MediaStreams.
 * @param {object} config - {disableLogs:true, frameInterval: 1, mimeType: "video/webm"}
 */
function B(e,t){e=e||[];var o,n,i=this;(t=t||{elementClass:"multi-streams-mixer",mimeType:"video/webm",video:{width:360,height:240}}).frameInterval||(t.frameInterval=10),t.video||(t.video={}),t.video.width||(t.video.width=360),t.video.height||(t.video.height=240),this.record=function(){var i;o=new O(e,t.elementClass||"multi-streams-mixer"),(i=[],e.forEach((function(e){T(e,"video").forEach((function(e){i.push(e)}))})),i).length&&(o.frameInterval=t.frameInterval||10,o.width=t.video.width||360,o.height=t.video.height||240,o.startDrawingFrames()),t.previewStream&&"function"==typeof t.previewStream&&t.previewStream(o.getMixedStream()),(n=new M(o.getMixedStream(),t)).record()},this.stop=function(e){n&&n.stop((function(t){i.blob=t,e(t),i.clearRecordedData()}))},this.pause=function(){n&&n.pause()},this.resume=function(){n&&n.resume()},this.clearRecordedData=function(){n&&(n.clearRecordedData(),n=null),o&&(o.releaseStreams(),o=null)},this.addStreams=function(i){if(!i)throw"First parameter is required.";i instanceof Array||(i=[i]),e.concat(i),n&&o&&(o.appendStreams(i),t.previewStream&&"function"==typeof t.previewStream&&t.previewStream(o.getMixedStream()))},this.resetVideoStreams=function(e){o&&(!e||e instanceof Array||(e=[e]),o.resetVideoStreams(e))},this.getMixer=function(){return o},this.name="MultiStreamRecorder",this.toString=function(){return this.name}}void 0!==r&&(r.DiskStorage=D),void 0===r&&(e.exports=O,void 0===(i=function(){return O}.apply(t,[]))||(e.exports=i)),void 0!==r&&(r.MultiStreamRecorder=B),void 0!==r&&(r.RecordRTCPromisesHandler=
/**
 * RecordRTCPromisesHandler adds promises support in {@link RecordRTC}. Try a {@link https://github.com/muaz-khan/RecordRTC/blob/master/simple-demos/RecordRTCPromisesHandler.html|demo here}
 * @summary Promises for {@link RecordRTC}
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef RecordRTCPromisesHandler
 * @class
 * @example
 * var recorder = new RecordRTCPromisesHandler(mediaStream, options);
 * recorder.startRecording()
 *         .then(successCB)
 *         .catch(errorCB);
 * // Note: You can access all RecordRTC API using "recorder.recordRTC" e.g. 
 * recorder.recordRTC.onStateChanged = function(state) {};
 * recorder.recordRTC.setRecordingDuration(5000);
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - Single media-stream object, array of media-streams, html-canvas-element, etc.
 * @param {object} config - {type:"video", recorderType: MediaStreamRecorder, disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}
 * @throws Will throw an error if "new" keyword is not used to initiate "RecordRTCPromisesHandler". Also throws error if first argument "MediaStream" is missing.
 * @requires {@link RecordRTC}
 */
function(e,t){if(!this)throw'Use "new RecordRTCPromisesHandler()"';if(void 0===e)throw'First argument "MediaStream" is required.';var o=this;o.recordRTC=new r(e,t),this.startRecording=function(){return new Promise((function(e,t){try{o.recordRTC.startRecording(),e()}catch(e){t(e)}}))},this.stopRecording=function(){return new Promise((function(e,t){try{o.recordRTC.stopRecording((function(n){o.blob=o.recordRTC.getBlob(),o.blob&&o.blob.size?e(n):t("Empty blob.",o.blob)}))}catch(e){t(e)}}))},this.pauseRecording=function(){return new Promise((function(e,t){try{o.recordRTC.pauseRecording(),e()}catch(e){t(e)}}))},this.resumeRecording=function(){return new Promise((function(e,t){try{o.recordRTC.resumeRecording(),e()}catch(e){t(e)}}))},this.getDataURL=function(e){return new Promise((function(e,t){try{o.recordRTC.getDataURL((function(t){e(t)}))}catch(e){t(e)}}))},this.getBlob=function(){return new Promise((function(e,t){try{e(o.recordRTC.getBlob())}catch(e){t(e)}}))},this.getInternalRecorder=function(){return new Promise((function(e,t){try{e(o.recordRTC.getInternalRecorder())}catch(e){t(e)}}))},this.reset=function(){return new Promise((function(e,t){try{e(o.recordRTC.reset())}catch(e){t(e)}}))},this.destroy=function(){return new Promise((function(e,t){try{e(o.recordRTC.destroy())}catch(e){t(e)}}))},this.getState=function(){return new Promise((function(e,t){try{e(o.recordRTC.getState())}catch(e){t(e)}}))},this.blob=null,this.version="5.6.2"})}).call(this,o(1),o(2))},function(e,t){var o;o=function(){return this}();try{o=o||new Function("return this")()}catch(e){"object"==typeof window&&(o=window)}e.exports=o},function(e,t){var o,n,i=e.exports={};function r(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function s(e){if(o===setTimeout)return setTimeout(e,0);if((o===r||!o)&&setTimeout)return o=setTimeout,setTimeout(e,0);try{return o(e,0)}catch(t){try{return o.call(null,e,0)}catch(t){return o.call(this,e,0)}}}!function(){try{o="function"==typeof setTimeout?setTimeout:r}catch(e){o=r}try{n="function"==typeof clearTimeout?clearTimeout:a}catch(e){n=a}}();var d,c=[],u=!1,l=-1;function f(){u&&d&&(u=!1,d.length?c=d.concat(c):l=-1,c.length&&m())}function m(){if(!u){var e=s(f);u=!0;for(var t=c.length;t;){for(d=c,c=[];++l<t;)d&&d[l].run();l=-1,t=c.length}d=null,u=!1,function(e){if(n===clearTimeout)return clearTimeout(e);if((n===a||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(e);try{return n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}(e)}}function h(e,t){this.fun=e,this.array=t}function g(){}i.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var o=1;o<arguments.length;o++)t[o-1]=arguments[o];c.push(new h(e,t)),1!==c.length||u||s(m)},h.prototype.run=function(){this.fun.apply(null,this.array)},i.title="browser",i.browser=!0,i.env={},i.argv=[],i.version="",i.versions={},i.on=g,i.addListener=g,i.once=g,i.off=g,i.removeListener=g,i.removeAllListeners=g,i.emit=g,i.prependListener=g,i.prependOnceListener=g,i.listeners=function(e){return[]},i.binding=function(e){throw new Error("process.binding is not supported")},i.cwd=function(){return"/"},i.chdir=function(e){throw new Error("process.chdir is not supported")},i.umask=function(){return 0}}])}));